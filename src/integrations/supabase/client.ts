// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://yhticndmpvzczquivpfb.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlodGljbmRtcHZ6Y3pxdWl2cGZiIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTIxMjc4OTksImV4cCI6MjA2NzcwMzg5OX0.Oj6E-LQPDcEE2j20kzF9QTtNU9jgxDF9CMSyzboFt7Y";

// Service role key for admin operations (bypasses RLS)
// IMPORTANT: In production, this should be stored in environment variables
// For now, you'll need to replace this with your actual service role key
const SUPABASE_SERVICE_ROLE_KEY = import.meta.env.VITE_SUPABASE_SERVICE_ROLE_KEY || "YOUR_SERVICE_ROLE_KEY_HERE";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  }
});

// Service role client for admin operations (bypasses RLS)
// This client can access all data regardless of RLS policies
export const adminSupabase = createClient<Database>(SUPABASE_URL, SUPABASE_SERVICE_ROLE_KEY, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
});